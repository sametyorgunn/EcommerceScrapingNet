@using EntityLayer.Dto.ResponseDto
@model List<CategoryDto>

@{
    void RenderMenu(int? parentId)
    {
        var categories = Model.Where(x => x.ParentId == parentId).ToList();
        if (categories.Any())
        {
            <ul class="dropdown-menu">
                @foreach (var category in categories)
                {
                    var hasChildren = Model.Any(x => x.ParentId == category.Id);

                    <li class="@(hasChildren ? "dropdown-submenu" : "")">
                        <a class="dropdown-item @(hasChildren ? "dropdown-toggle" : "")" href="/ürün-listesi/@category.Id">
                            @category.Name
                        </a>

                        @if (hasChildren)
                        {
                            RenderMenu(category.Id); 
                        }
                    </li>
                }
            </ul>
        }
    }
}

<nav class="collapse w-100">
    <ul class="nav nav-pills w-100" id="mainNav">
        @foreach (var rootCategory in Model.Where(x => x.ParentId == 0))
        {
            var hasChildren = Model.Any(x => x.ParentId == rootCategory.Id);

            <li class="dropdown">
                <a class="dropdown-item dropdown-toggle" href="/ürün-listesi/@rootCategory.Id">
                    @rootCategory.Name
                </a>

                @if (hasChildren)
                {
                    RenderMenu(rootCategory.Id); 
                }
            </li>
        }
    </ul>
</nav>
